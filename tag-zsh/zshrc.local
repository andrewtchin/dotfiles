export EDITOR='vim'
export LESS='eFRX'
export GPG_TTY=`tty`
[[ -d "$HOME/go" ]] && export GOPATH=$HOME/go
[[ -n "$GOPATH" ]] && export PATH=$PATH:/usr/local/go/bin:$GOPATH/bin

# Secrets
[[ -s "$HOME/.env_secrets" ]] && source "$HOME/.env_secrets"

# Aliases
which htop >/dev/null     && alias top=htop
which ack-grep >/dev/null && alias ack=ack-grep
which vim >/dev/null      && alias vi=vim

alias md='mkdir -p'
alias gh='cd ~/src/github.com'
alias gl='cd ~/src/gitlab.com'
alias glc='cd ~/src/gitlab.chinter.net'

alias grep='grep --color=auto'
alias gr='grep -rn'
alias gri='grep -rni'
alias fgrep='fgrep --color=auto'
alias egrep='egrep --color=auto'

alias la='ls -A'
alias ll='ls -alhF'
alias l='ls -alhF'
alias tree3='tree -L 3'
alias dutop='du -chs * | sort -rn | head'
alias rmhist='echo "" > ~/.zsh_history & exec $SHELL -l'

alias ytdl='youtube-dl -f "bestvideo[ext=mp4]+bestaudio[ext=m4a]/mp4"'

# Git aliases
alias gitreset='git reset --hard && git submodule foreach --recursive git reset --hard'
alias gitrhum='git reset --hard upstream/master'
alias gitrhom='git reset --hard origin/master'
alias gitclean='git clean -fdx && git submodule foreach --recursive git clean -fdx'
alias gitsubup='git submodule update --init --recursive'
alias yolo='git commit -am "DEAL WITH IT" && git push -f origin master'
alias githttps='git config --global url."https://".insteadOf git://'
alias gitcam='git commit -am'
alias gitpom='git push origin master'
alias gitru='git remote update'
alias gitrom='git rebase origin/master'
alias gitrum='git rebase upstream/master'

# Docker aliases
alias drm='docker rm -f $(docker ps -a -q)'
alias drmi='docker rmi -f $(docker images -q)'

# AWS aliases
alias awswho='aws sts get-caller-identity'
alias awsunset='unset AWS_ACCESS_KEY_ID AWS_SECRET_ACCESS_KEY AWS_SESSION_TOKEN'

# Python aliases
alias venv='python3  -m venv venv'
alias venva='source venv/bin/activate'


if [[ `uname` == 'Darwin' ]]
then
  export HOMEBREW_NO_ANALYTICS=1
  alias awk='gawk'
  alias md5sum='md5'
  alias dns='scutil --dns'
  alias desktophide='defaults write com.apple.finder CreateDesktop false; killall Finder'
  alias desktopshow='defaults write com.apple.finder CreateDesktop true; killall Finder'
  alias kill1p='pkill 1Password'
  alias date='gdate'
  alias journal=' \
  journaldir="$HOME/sync/journal" ;   \
  year="`date +%Y`" ;            \
  yearpath="$journaldir/$year" ; \
  [[ -d "$yearpath" ]] || mkdir -p $yearpath ; \
  jfile="log_`date -I`.md" ;                \
  jfilepath="$journaldir/$year/$jfile" ;    \
  header="# log_`date -I`\n\n# Highlights:\n\n" ; \
  [[ -f "$jfilepath" ]] && echo "Opening log: $jfilepath" || { echo "Creating new log: $jfilepath" ; echo -e "$header" >  $jfilepath ; } ; \
  vim $jfilepath ; '
fi

if [[ `hostname` == 'CORPORATE' ]];
then
  export DBCDIR='/dbc/sc-dbc1212/andrewchin/'
  alias work='cd ~/src/gitlab.eng.vmware.com'
  alias dbc='ssh andrewchin@sc-dbc1212.eng.vmware.com'
  alias nimbus='ssh andrewchin@nimbus-gateway.eng.vmware.com'
  alias kd='kubectl --context iad-dev -n vmc-pdx-public'
  alias ks='kubectl --context pdx-stg -n vmc-stg-public'
  alias kp='kubectl --context pdx-prd -n vmc-prd-public'
fi

function clearmeta() {
  /usr/libexec/PlistBuddy -c "delete :systemitems:VolumesList" ~/Library/Preferences/com.apple.sidebarlists.plist
  defaults delete /Library/Preferences/com.apple.Bluetooth.plist DeviceCache
  defaults delete /Library/Preferences/com.apple.Bluetooth.plist IDSPairedDevices
  defaults delete /Library/Preferences/com.apple.Bluetooth.plist PANDevices
  defaults delete /Library/Preferences/com.apple.Bluetooth.plist PANInterfaces
  defaults delete /Library/Preferences/com.apple.Bluetooth.plist SCOAudioDevices
  rm -rfv /var/spool/cups/c0*
  rm -rfv /var/spool/cups/tmp/*
  rm -rfv /var/spool/cups/cache/job.cache*
  defaults delete /Users/$USER/Library/Preferences/com.apple.iPod.plist "conn:128:Last Connect"
  defaults delete /Users/$USER/Library/Preferences/com.apple.iPod.plist Devices
  defaults delete /Library/Preferences/com.apple.iPod.plist "conn:128:Last Connect"
  defaults delete /Library/Preferences/com.apple.iPod.plist Devices
  rm -rfv /var/db/lockdown/*
  qlmanage -r cache
  defaults delete ~/Library/Preferences/com.apple.finder.plist FXDesktopVolumePositions
  defaults delete ~/Library/Preferences/com.apple.finder.plist FXRecentFolders
  defaults delete ~/Library/Preferences/com.apple.finder.plist RecentMoveAndCopyDestinations
  defaults delete ~/Library/Preferences/com.apple.finder.plist RecentSearches
  defaults delete ~/Library/Preferences/com.apple.finder.plist SGTRecentFileSearches
  defaults delete ~/Library/Preferences/com.apple.iTunes.plist recentSearches
}

function hashes() {
  md5sum $1
  shasum $1
  shasum -a 256 $1
}

function hashdir() {
  find "$1" -type f | sort | xargs -I {} shasum -a 256 {}
}

function genpass() {
  # genpass <length>
  openssl rand -base64 $1
}

function sshkeygen() {
  # sshkeygen /path/to/key "the comment"
  ssh-keygen -t rsa -b 4096 -o -a 256 -f $1 -C "$2"
}

function vmwmnt() {
  mount -t nfs build-toolchain.eng.vmware.com:/toolchain /build/toolchain
  mount -t nfs build-apps.eng.vmware.com:/apps  /build/apps
}

function sandbox() {
  # sandbox "<branch>"
  /build/apps/bin/gobuild sandbox queue fractal-epop --branch=$1 --no-changeset --syncto=latest --no-store-trees --accept-defaults --force
}

function pemftos() {
  # pemftos "<filename>"
  awk 'NF {sub(/\r/, ""); printf "%s\\n",$0;}' $1
}

function pemfmt() {
  # pemfmt "<filename>"
  awk -i inplace '{gsub(/\\n/,RS)}1' $1
  chmod 0600 $1
}

function x509() {
  # x509 "<filename>"
  openssl x509 -in $1 -text -noout
}

function stripexif() 
{ 
  exiftool -all= "$@"
}

function showexif()
{
  exiftool -a -u -g1 $1
}
